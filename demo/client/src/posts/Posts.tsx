import React from "react";
import gql from "graphql-tag";
import Post from "./Post";
import { useGetAllPostsQuery } from "./__generated__/Posts";

function Posts() {
  // Use the Posts query we defined below.
  // Note that this custom hook is auto-generated by graphql-code-generator.
  const { loading, error, data } = useGetAllPostsQuery();

  if (loading) return <p>Loading...</p>;
  if (error) return <p>Error :(</p>;

  return (
    <div>
      {data && data.posts.map(post => <Post key={post.id} {...post} />)}
    </div>
  );
}

// We define our data needs next to the component.
// Here the Posts component will query for the list of Posts and render them.
// However the fields required for rendering a single post are defined by the Post component itself.
// This way the Posts comment doesn't need to know how a single component is rendered,
// it only aggregates data dependencies.
Posts.queries = {
  getAllPosts: gql`
    query GetAllPosts {
      posts {
        id
        ...Post
      }
    }
    ${Post.fragments.post}
  `,
};

export default Posts;
